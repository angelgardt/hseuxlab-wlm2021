[["realdata.html", "6 Работа с реальными данными 6.1 Рабочая директория 6.2 Импорт данных 6.3 Исследование данных 6.4 .RData", " 6 Работа с реальными данными Итак, мы приступаем к самому интересному и самому важному разделу первого блока! Мы будем тренироваться на данных о фильма и сериалах Netflix. 6.1 Рабочая директория Раз мы хотим работать в данными, надо их откуда-то взять. Скачайте датасет по этой ссылке. Датасетом мы будем называть любой набор данных, который у нас есть. Мы уже говорили о рабочей директории и проектах в самом начале курса. Немного вспомним эту тему. Мы накапливаем много различных файлов (скрипты, файлы сырых данных данных, файлы предобработанны данных, файл объектов из рабочего пространства, графики, результаты анализа…) в процессе анализа данных, и это необходимо каким-то образом систематизировать. Есть рабочая директория — это папка, в которую смотрит R во время работы. Что это за папка можно узнать через команду: getwd() # get working directory ## [1] &quot;/Users/antonangelgardt/hseuxlab-wlm2021/book/wlm2021-book&quot; У меня он смотрел вот в эту папку, у вас, скорее всего, будет что-то типа C://users/имя_пользователя или /Users/имя_пользователя, что указывает на папку пользователя по умолчанию. Можно установить другую рабочую директорию с помощью команды setwd(): setwd(&quot;/Users/antonangelgardt/R&quot;) Теперь он будет смотреть в папку R, которая лежит в дефолтной папке пользователя. Такой способ достаточно удобен, однако можно сделать ещё лучше — создать проект (Project). Кто-то любит работать в проектах, кто-то нет — дело вкуса. Мне это нравится, даже если вам не понравится. Простите, если мы вдруг не сойдёмся во вкусах, но, повторюсь, это нравится мне, сугубо, лично… Поэтому я буду про это рассказывать и рекламировать. Зайдите в File → New Project…. У вас откроется такое окно: Выберите New Directory, затем еще раз New Project: Откроется вот это: В Directory name указываем название нашей папки, во втором поле указываем путь к той папке, в которой будет лежать создаваемая папка. Нажимаем Create Project, после чего R перезапускает сессию, и открывается привычное окно. Однако в верхнем правом углу R теперь указано название проекта, в котором мы работаем. Если вы уже это сделали в начале курса, то пропустите это задание. Создайте проект для нашего курса. Откройте File → New Project… Выберите New Directory → New Project Назовите новую директорию hseuxlab-wlm2021 Задайте расположение внутри папки пользователя системы Создайте новый скрипт и скопируйте туда следующий код: print(&quot;Hello, World of Linear Models!&quot;) Сохраните скрипт нажатием Ctrl + S (Cmd + S) Теперь при работе в рамках курса мы будем запускать проект и работать в нём, чтобы ничего не запуталось. Много ли это приносит профита? Ну, не так уж и много… По сути, что открыть проект, что выполнить setwd(\"пусть_к_папке\") — примерно одно и то же. Вот только строку кода можно забыть запустить после открытия скрипта, а если мы запустили проект, мы уверены, что у нас все автоматически настроилось и ошибок не будет. Если вы уже это сделали в начале курса, то пропустите это задание. Откройте директорию (папку) проекта курса и создайте в ней несколько папок. Они нам понадобятся для структурирования нашего пространства в процессе курса, потому что файлов будет много. Кроме того, будем постепенно привыкать к тому, чтобы наше рабочее пространство было чистым и опрятным. Нам понадобятся следующие папки: scripts для хранения скриптовых файлов data для хранения файлов данных figures, чтобы выгружать графики Потом мы сможем дополнить их другими папками, если нам таковые понадобятся, а также создать более мелкие подразделы внутри созданных папок. Дальнейший разговор будет вестись с учетом того, что вы работаете в созданном проекте или задали рабочую директорию через setwd(), а также у вас созданы папки scripts, data и figures внутри папки нашего курса. 6.2 Импорт данных Окей, файл с данными у нас есть. Теперь наша задача его как-то загрузить в R, чтобы мы могли с ним работать. Вариантов существует несколько. Разберём сначала следующий. переложите скачанный файл из «Загрузок» в папку data обратите внимание на расширение этого файла: netflix_title.csv Такие файлы можно прочитать с помощью функции read.csv(). В аргументах это функции надо указать файл, который надо прочитать (а также путь к нему, начиная с подпапки рабочей директории). То есть: netflix &lt;- read.csv(&#39;data/netflix_titles.csv&#39;) Почему так? Так как мы установили рабочую директорию (или запустили проект), то R по умолчанию теперь смотрит в папку нашего курса. А вот далее его надо сориентировать — поэтому мы пишем data/netflix_titles.csv. То есть говорим ему: «иди дальше в папку data и принеси мне файл netflix_titles.csv. Собственно, он нам его и принёс. Можно это проверить: head(netflix) ## show_id type title director ## 1 s1 TV Show 3% ## 2 s2 Movie 7:19 Jorge Michel Grau ## 3 s3 Movie 23:59 Gilbert Chan ## 4 s4 Movie 9 Shane Acker ## 5 s5 Movie 21 Robert Luketic ## 6 s6 TV Show 46 Serdar Akar ## cast ## 1 João Miguel, Bianca Comparato, Michel Gomes, Rodolfo Valente, Vaneza Oliveira, Rafael Lozano, Viviane Porto, Mel Fronckowiak, Sergio Mamberti, Zezé Motta, Celso Frateschi ## 2 Demián Bichir, Héctor Bonilla, Oscar Serrano, Azalia Ortiz, Octavio Michel, Carmen Beato ## 3 Tedd Chan, Stella Chung, Henley Hii, Lawrence Koh, Tommy Kuan, Josh Lai, Mark Lee, Susan Leong, Benjamin Lim ## 4 Elijah Wood, John C. Reilly, Jennifer Connelly, Christopher Plummer, Crispin Glover, Martin Landau, Fred Tatasciore, Alan Oppenheimer, Tom Kane ## 5 Jim Sturgess, Kevin Spacey, Kate Bosworth, Aaron Yoo, Liza Lapira, Jacob Pitts, Laurence Fishburne, Jack McGee, Josh Gad, Sam Golzari, Helen Carey, Jack Gilpin ## 6 Erdal Beşikçioğlu, Yasemin Allen, Melis Birkan, Saygın Soysal, Berkan Şal, Metin Belgin, Ayça Eren, Selin Uludoğan, Özay Fecht, Suna Yıldızoğlu ## country date_added release_year rating duration ## 1 Brazil August 14, 2020 2020 TV-MA 4 Seasons ## 2 Mexico December 23, 2016 2016 TV-MA 93 min ## 3 Singapore December 20, 2018 2011 R 78 min ## 4 United States November 16, 2017 2009 PG-13 80 min ## 5 United States January 1, 2020 2008 PG-13 123 min ## 6 Turkey July 1, 2017 2016 TV-MA 1 Season ## listed_in ## 1 International TV Shows, TV Dramas, TV Sci-Fi &amp; Fantasy ## 2 Dramas, International Movies ## 3 Horror Movies, International Movies ## 4 Action &amp; Adventure, Independent Movies, Sci-Fi &amp; Fantasy ## 5 Dramas ## 6 International TV Shows, TV Dramas, TV Mysteries ## description ## 1 In a future where the elite inhabit an island paradise far from the crowded slums, you get one chance to join the 3% saved from squalor. ## 2 After a devastating earthquake hits Mexico City, trapped survivors from all walks of life wait to be rescued while trying desperately to stay alive. ## 3 When an army recruit is found dead, his fellow soldiers are forced to confront a terrifying secret that&#39;s haunting their jungle island training camp. ## 4 In a postapocalyptic world, rag-doll robots hide in fear from dangerous machines out to exterminate them, until a brave newcomer joins the group. ## 5 A brilliant group of students become card-counting experts with the intent of swindling millions out of Las Vegas casinos by playing blackjack. ## 6 A genetics professor experiments with a treatment for his comatose sister that blends medical and shamanic cures, but unlocks a shocking side effect. Что-то загрузилось. Это хорошо. Что именно — выясним чуть позже. Можно ли не прописывать data? Можно, но тогда придётся переложить файл данных в рабочую директорию (то есть папку курса). С одним файлом ничего, можно жить. А есть у вас 30 или 50 файлов разных респондентов? Уже тяжеловато и бардак. Поэтому, на мой взгляд, такая организация — хороший компромисс: кода пишем чуть-чуть больше, но зато есть порядок1. Конечно, можно хранить файлы данных где-то совсем отдельно. Но тогда и прописывать придётся путь от конревой папки компа: # например, можно прочитать файл прямо из папки «Загрузки» netflix &lt;- read.csv(&#39;/Users/antonangelgardt/Downloads/netflix_titles.csv&#39;) Это выглядит не очень удобно. На самом деле, в мире облачных технологий можно и вовсе обойтись без скачивания файлов на десктоп. Функция read.csv() вполне может прочитать файл прямо из интернета: # это ссылка на мой GitHub, где лежит нужный нам файл netflix &lt;- read.csv(&#39;https://raw.githubusercontent.com/angelgardt/hseuxlab-wlm2021/master/data/netflix_titles.csv&#39;) Однако стоит помнить, что наши собранные руками данные в облаках, скорее всего, не лежат. Поэтому надо уметь загрузить файл и из интернета, и с компа. 6.2.1 Форматы данных Мы тактично соскользнули с момента расширения файла. Напомню, что у нас файл netflix_titles.csv. Пришло время уделить этому внимание. Мы говорили о типах данных, о структурах данных — а теперь поговорим о форматах данных. Формат данных — это характеристика данных, которая определяет много чего: какие программы могут работать с этим файлом как структурирован файл внутри как структурированный файл разбирается на неструктирированные последовательности байтов (для хранения в памяти компьютера) и преобразуются обратно… Ну, короче куча-куча всего. Формат файла (не вдаваясь в детали) задаётся его разширением, то есть тем, что написано после точки в его названии (.R, .doc, .xlsx, .xml, .txt, …). Нас, прежде всего, интересуют файлы данных, поэтому об их форматах мы и поговорим. 6.2.1.1 Текстовые форматы Проще всего хранить данные в тексте. Это удобно, такие файлы мало весят и в них можно поместить большое количество информации. Самый простой текстовый формат — это .txt. Это тот самый «Блокнот», с которым наверняка когда-то все сталкивались. Никакого форматирования, никакой лишней мишуры — только текст. Но нам ведь нужно из этого текста каким-то образом потом вытащить датафрейм. Для этого существуют разделители. Чаще всего в табличных .txt формате столбцы таблицы разделены между собой символами табуляции ('\\tab'), а строки — символом переноса строки ('\\n'). Файл .txt. можно считать с помощью функции read.table(): df &lt;- read.table(&#39;data/text_data.txt&#39;) # это данные про качесво красного вина # так как у вас нет отдельно скачанного этого датасета, то запустите вот эту команду, чтобы прочитать текстовый файл # read.table() тоже умеет читать прямо из интернета df &lt;- read.table(&#39;https://raw.githubusercontent.com/angelgardt/hseuxlab-wlm2021/master/book/wlm2021-book/data/text_data.txt&#39;) Если использовать другие разделители, например, запятую, то получится файл, содержащий значения, разделённые запятыми (comma separated values). Это и есть .csv-файлы, с которыми мы будем чаще всего работать. Несмотря на то, что по умолчанию операционная система пытается открыть CSV-шки в табличном редакторе (например, Excel), не надо на это вестись! CSV — это текстовый формат данных. По умолчанию, в CSV-файле столбцы разделяются запятыми, а строки — символом переноса строки, поэтому функция read.csv() имеет соответствующие дефолтные настройки. Однако так бывает не всегда. Например, попробуем прочесть следующий файл: 6.2.1.2 Табличные форматы 6.2.1.3 Форматы данных с особой разметкой 6.2.1.4 Файлы данных других статистических программ 6.3 Исследование данных 6.4 .RData …и, возможно, закон, но это не точно…↩︎ "]]
