[["maths.html", "9 Математический ликбез 9.1 Элементы алгебры логики 9.2 Элементы теории множеств 9.3 Элементы математического анализа 9.4 Элементы линейной алгебры", " 9 Математический ликбез 9.1 Элементы алгебры логики Логика исследует закономерности мышления, но делает это отлично от того, как этим занимается, например, психология. Формальная логика абстрагируется от связей мышления с какими-либо сторонами сознания и сосредотачивается на логической непротиворечивости и последовательности мышления. Таким образом, формальная логика — это наука об общих структурах правильного мышления в его языковой форме. Логика — это нормативная наука, то есть она определяет, как оно должно быть, в то время как, например, психология исследуется как оно есть и как и почему логические законы нарушаются. 9.1.1 Высказывания Логика как наука имеет дело, прежде всего, с высказываваниями. Высказывание отражает определённую объективную1 связь между предметами. Высказывание истинно, если в нём содержится адеквантное отражение этой связи — в ином случае высказывание ложно. В общем случае высказывание существует с форме повествовательного предложения. Например, высказывание «Земля вращается вокруг Солнца» отражает объективное отношение, поэтому оно истинно, а высказывание «страницы этой книги зелёного цвета» не адекватно отражает существующее положение дел, поэтому оно ложно. Прежде всего, нас будут интересовать атомарные высказывания. Это элементарные высказывания, которые невозможно разделить на составляющие — более мелкие высказывания. Например, «четыре — это целое число» — это атомарное высказывание. Мы уже сталкивались с логическими операциями в R (например, при сабсете данных). Подумайте, какие атомарные высказывания могли бы быть сформулированы в той области, которую мы изучаем. Атомарные высказывания могут быть либо истинны, либо ложны. Почему? Потому что мы находимся в рамках двузначной логики2. Атомарные высказывания могут быть обозначены пропозициональными переменными. Так же как и числа в математике могут быть заменены буквеными обозначениями для абстрагирования от значения числа, так же и высказывания заменяются переменными для абстрагирования от содержания высказывания. Для обозначения пропозициональных переменных используются латинские буквы. А так как само высказывания имеет опредлённое значение истинности (истина, или TRUE, и ложь, или FALSE), то и переменная, которой мы обозначаем это высказывание, также будет обладать этим же значением истинности. Всё аналогично математике. 9.1.2 Логические операции С атомарными высказываниями можно выполнять различные логические операции. 9.1.2.1 Инверсия Самая простая операция — инверсия, или отрицание. Оно обозначается с помощью оператора \\(\\neg\\). Это унарная операция, то есть она применяется к одной переменной. При отрицании значение истинности высказывания изменяется на противоположное, поэтому мы можнм составить следующую таблицу истинности для отрицания: \\(p\\) \\(\\neg p\\) TRUE FALSE FALSE TRUE В данном случае с помощью переменной \\(p\\) обозначено некоторые атомарное высказывание. Особо стоит отметить, что при отрицании отрицается всё высказывание целиком, а не какой-то отдельный его элемент. То есть формально правильным вариантом отрицания высказывания «все лебеди белые» будет следующий — «неверно, что все лебеди белые». 9.1.2.1.1 Инверсия в R Оператор отрицания в R обозначается восклицательным знаком !. Если его поставить перед некоторой командой, которая возвращает логическое значение, то этот оператор изменит его на противоположное: 3 &gt; 6; !(3 &gt; 6) ## [1] FALSE ## [1] TRUE &quot;sing&quot; == &quot;sign&quot;; !(&quot;sing&quot; == &quot;sign&quot;); &quot;sing&quot; != &quot;sign&quot; ## [1] FALSE ## [1] TRUE ## [1] TRUE a &lt;- c(TRUE, FALSE, FALSE, TRUE); !a ## [1] FALSE TRUE TRUE FALSE 9.1.3 Сложные высказвания Из атомарных высказываний можно составлять сложные высказывания при помощи логических операторов. Например, высказывание «если четыре делится на два, то четыре — чётное число» является сложным, посколько состоит из двух атомарных — «четыре делится на два» и «четыре — чётное число» — соединённых союзом «если…, то…». Далее мы пристумаем с знакомству с бинарными операторами, то есть такими, которые функционируют на двух аргументах. 9.1.3.1 Конъюнкция 9.1.3.2 Дизъюнкция 9.1.3.3 Разделительная дизъюнкция 9.1.3.4 Антиконъюнкция 9.1.3.5 Импликация 9.1.3.6 Репликация 9.1.3.7 Эквиваленция 9.1.4 Нормальные формы 9.1.4.1 Конъюнктивная нормальная форма 9.1.4.2 Дизъюнктивная нормальная форма 9.2 Элементы теории множеств 9.2.1 Множество 9.2.2 Операции над множествами 9.2.3 Отображения 9.3 Элементы математического анализа 9.3.1 Последовательность 9.3.2 Предел последовательности 9.3.3 Функции 9.3.3.1 Дискретные и непрерывные функции 9.3.4 Дифференцируемость функции. Производная 9.3.5 Функции нескольких переменных 9.3.6 Частные производные 9.3.7 Интеграл 9.4 Элементы линейной алгебры 9.4.1 Что такое матрица? «Увы, невозможно объяснить, что такое матрица. Ты должен увидеть это сам.» Морфеус (Матрица, 1999) Матрица выглядит как таблица чисел, записанных в определенном порядке. Например, вот так: \\[ \\boldsymbol{A}= \\begin{pmatrix} 1 &amp; 6 &amp; 11 \\\\ 2 &amp; 7 &amp; 13 \\\\ 3 &amp; 8 &amp; 15 \\\\ 4 &amp; 9 &amp; 18 \\\\ 5 &amp; 0 &amp; 19 \\end{pmatrix} \\] В данном случае это прямоугольная матрица \\(\\boldsymbol{A}\\). Матрицы обозначаются заглавными буквами (иногда еще и полужирным написанием, чтобы отличать от обычных переменных). Количество строк и столбцов определяет размер матрицы. То есть данная матрица имеет размер 5×3 — \\(\\boldsymbol{A}_{5×3}\\). При указании размера сначала указывается количество строк, затем — число столбцов. Ну, и, собственно, всё. Это и есть матрица. 9.4.2 Откуда берутся матрицы? Матрицы возникают при решении систем линейных уравнений. Рассмотрим систему. \\[ \\begin{cases}a_{11}x_1 + a_{12}x_2 + \\ldots + a_{1m}x_m = b_1 \\\\a_{21}x_1 + a_{22}x_2 + \\ldots + a_{2m}x_m = b_2 \\\\ \\dots \\dots \\dots \\dots \\dots \\dots \\dots \\dots \\dots \\dots \\\\a_{n1}x_1 + a_{n2}x_2 + \\ldots + a_{nm}x_m = b_n \\end{cases} \\] Система состоит из \\(n\\) линейных уравнений относительно \\(m\\) неизвестных. Её можно переписать в матричном виде: \\[ \\boldsymbol{A}\\boldsymbol{x}= \\boldsymbol{b}, \\] где \\[ \\boldsymbol{A}= \\begin{pmatrix} a_{11} &amp; a_{12} &amp; \\dots &amp; a_{1m} \\\\ a_{21} &amp; a_{22} &amp; \\dots &amp; a_{2m} \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ a_{n1} &amp; a_{n2} &amp; \\dots &amp; a_{nm} \\end{pmatrix} ; \\quad \\boldsymbol{x}= \\begin{pmatrix} x_1 \\\\ x_2 \\\\ \\vdots \\\\ x_m \\end{pmatrix} ; \\quad \\boldsymbol{b}= \\begin{pmatrix} b_1 \\\\ b_2 \\\\ \\vdots \\\\ b_n \\end{pmatrix} \\] Здесь мы видим матрицу коэффициентов системы \\(\\boldsymbol{A}\\). Размер этой матрицы \\(n × m\\). Также мы видим две особых матрицы \\(\\boldsymbol{x}\\) и \\(\\boldsymbol{b}\\). Количество столбов у них равно единице. Такие матрицы носят название векторов. Но ведь мы можем написать вектор всего с одной строкой. Например, некоторый вектор \\(\\boldsymbol{c}\\): \\[ \\boldsymbol{c}= \\begin{pmatrix} c_1 &amp; c_2 &amp; \\dots &amp; c_k \\end{pmatrix} \\] Для большей точности принята следующая терминология: векторы вида \\(\\boldsymbol{x}\\) называют «вектор-столбец», а векторы вида \\(\\boldsymbol{c}\\) называют «вектор-строка». Векторы часто также обозначаются полужирным начертанием, чтобы отличать их от отдельных значений. Так как отдельные столбцы матрица мы можем представить в виде векторов, то матрицу \\(\\boldsymbol{A}\\) можно написать еще одним способом: \\[ \\boldsymbol{A}= \\begin{pmatrix} \\boldsymbol{A}_1 &amp; \\boldsymbol{A}_2 &amp; \\dots &amp; \\boldsymbol{A}_m \\end{pmatrix}, \\] где \\[ \\boldsymbol{A}_i = \\begin{pmatrix} a_{1i} \\\\ a_{2i} \\\\ \\vdots \\\\ a_{ni} \\end{pmatrix}, \\quad 0&lt;i \\leq m \\] Ок, но остается вопрос: почему матричная запись равносильна причной нам записи системы? Деталь 1 Есть две замечательные матрицы: единичная матрица \\(\\boldsymbol{E}\\) (иногда \\(\\boldsymbol{I}\\)) и нулевая матрица \\(\\boldsymbol{O}\\): \\[ \\boldsymbol{E}= \\begin{pmatrix} 1 &amp; 0 &amp; \\dots &amp; 0 \\\\ 0 &amp; 1 &amp; \\dots &amp; 0 \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ 0 &amp; 0 &amp; \\dots &amp; 1 \\end{pmatrix} ; \\quad \\boldsymbol{O}= \\begin{pmatrix} 0 &amp; 0 &amp; \\dots &amp; 0 \\\\ 0 &amp; 0 &amp; \\dots &amp; 0 \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ 0 &amp; 0 &amp; \\dots &amp; 0 \\end{pmatrix} \\] Деталь 2 Матрица размером \\(n × n\\) называется квадратной матрицей. Квадратная матрица, все элементы которой, кроме стоящих на главной диагонали, равны нулю, называется диагональной матрицей. 9.4.3 Действия с матрицами 9.4.3.1 Сложение матриц Сложение определено только для матриц одинакового размера. \\[ \\boldsymbol{A}_{n×m} + \\boldsymbol{B}_{n×m} = \\begin{pmatrix} a_{11} + b_{11} &amp; a_{12} + b_{12} &amp; \\dots &amp; a_{1m} + b_{1m} \\\\ a_{21} + b_{21} &amp; a_{22} + b_{22} &amp; \\dots &amp; a_{2m} + b_{2m} \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ a_{n1} + b_{n1} &amp; a_{n2} + b_{n2} &amp; \\dots &amp; a_{nm} + b_{nm} \\end{pmatrix} \\] Свойства сложения матриц: \\(\\boldsymbol{A}+ \\boldsymbol{B}= \\boldsymbol{B}+ \\boldsymbol{A}\\) (коммутативность) \\((\\boldsymbol{A}+ \\boldsymbol{B}) + \\boldsymbol{C}= \\boldsymbol{A}+ (\\boldsymbol{B}+ \\boldsymbol{C})\\) (ассоциативность) \\(\\boldsymbol{A}+ \\boldsymbol{O}= \\boldsymbol{A}\\) (существование нулевого элемента) \\(\\boldsymbol{A}+ (-\\boldsymbol{A}) = \\boldsymbol{O}\\) (существование противоположного элемента) Все, описанное выше, справедливо для векторов. 9.4.3.2 Умножение матрицы на число Умножение на вещественное число определено для любой матрицы \\(n × m\\). \\[ \\lambda \\boldsymbol{A}= \\begin{pmatrix} \\lambda a_{11} &amp; \\lambda a_{12} &amp; \\dots &amp; \\lambda a_{1m} \\\\ \\lambda a_{21} &amp; \\lambda a_{22} &amp; \\dots &amp; \\lambda a_{2m} \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ \\lambda a_{n1} &amp; \\lambda a_{n2} &amp; \\dots &amp; \\lambda a_{nm} \\end{pmatrix}, \\; \\forall \\lambda \\in \\mathbb{R} \\] Свойства умножения матрицы на число: \\(1 \\cdot \\boldsymbol{A}= \\boldsymbol{A}\\) \\(-1 \\cdot \\boldsymbol{A}= -\\boldsymbol{A}\\) \\(\\lambda(\\mu \\boldsymbol{A}) = (\\lambda \\mu) \\boldsymbol{A}\\) (ассоциативность) \\((\\lambda + \\mu) \\boldsymbol{A}= \\lambda \\boldsymbol{A}+ \\mu \\boldsymbol{A}\\) (дистрибутивность) \\(\\lambda (\\boldsymbol{A}+ \\boldsymbol{B}) = \\lambda \\boldsymbol{A}+ \\lambda \\boldsymbol{B}\\) (дистрибутивность) Все, описанное выше, справедливо для векторов. 9.4.4 Скалярное произведение векторов Скаларное произведение определено для векторов одинаковой размерности как сумма произведений их соответствующих координат. \\[ \\boldsymbol{a}= \\begin{pmatrix} a_1 &amp; a_2 &amp; \\dots &amp; a_n \\end{pmatrix} \\\\ \\boldsymbol{b}= \\begin{pmatrix} b_1 &amp; b_2 &amp; \\dots &amp; b_n \\end{pmatrix}\\\\ \\] \\[ \\boldsymbol{a}\\cdot \\boldsymbol{b}= a_1 b_1 + a_2 b_2 + \\dots + a_n b_n \\] 9.4.5 Векторное произведение векторов мы рассматривать не будем :) 9.4.6 Произведение матриц (матричное умножение) Ну, вот и начался треш. Умножение определено для матриц \\(\\boldsymbol{A}_{n × k}\\) и \\(\\boldsymbol{B}_{k × m}\\), то количество столбцов матрицы, стоящей слева от знака умножения, должно быть равно количество строк матрицы, стоящей справа от знака умножения. Произведением матрицы \\(\\boldsymbol{A}_{n × k}\\) на матрицу \\(\\boldsymbol{B}_{k × m}\\) называется матрица \\(\\boldsymbol{C}_{n × m}\\), элемент которой \\(c_{ij}\\) равен скалярному произведению \\(i\\)-го вектора-строки матрицы \\(\\boldsymbol{A}\\) и \\(j\\)-го вектора-столбца матрицы \\(\\boldsymbol{B}\\). Пусть \\[ \\boldsymbol{A}= \\begin{pmatrix} \\boldsymbol{a}_1 \\\\ \\boldsymbol{a}_2 \\\\ \\vdots \\\\ \\boldsymbol{a}_n \\end{pmatrix} = \\begin{pmatrix} a_{11} &amp; a_{12} &amp; \\dots &amp; a_{1k} \\\\ a_{21} &amp; a_{22} &amp; \\dots &amp; a_{2k} \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ a_{n1} &amp; a_{n2} &amp; \\dots &amp; a_{nk} \\end{pmatrix}, \\\\ \\boldsymbol{B}= \\begin{pmatrix} \\boldsymbol{b}_1 &amp; \\boldsymbol{b}_2 &amp; \\dots \\boldsymbol{b}_m \\end{pmatrix} = \\begin{pmatrix} b_{11} &amp; b_{12} &amp; \\dots &amp; b_{1m} \\\\ b_{21} &amp; b_{22} &amp; \\dots &amp; b_{2m} \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ b_{k1} &amp; b_{k2} &amp; \\dots &amp; b_{km} \\end{pmatrix} \\] Тогда, \\[ \\boldsymbol{A}\\times \\boldsymbol{B}= \\begin{pmatrix} \\boldsymbol{a}_1 \\cdot \\boldsymbol{b}_1 &amp; \\boldsymbol{a}_1 \\cdot \\boldsymbol{b}_2 &amp; \\dots &amp; \\boldsymbol{a}_1 \\cdot \\boldsymbol{b}_m \\\\ \\boldsymbol{a}_2 \\cdot \\boldsymbol{b}_1 &amp; \\boldsymbol{a}_2 \\cdot \\boldsymbol{b}_2 &amp; \\dots &amp; \\boldsymbol{a}_2 \\cdot \\boldsymbol{b}_m \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ \\boldsymbol{a}_n \\cdot \\boldsymbol{b}_1 &amp; \\boldsymbol{a}_n \\cdot \\boldsymbol{b}_2 &amp; \\dots &amp; \\boldsymbol{a}_n \\cdot \\boldsymbol{b}_m \\\\ \\end{pmatrix} = \\\\ = \\begin{pmatrix} (a_{11} b_{11} + a_{12} b_{21} + \\dots + a_{1k}b_{k1}) &amp; (a_{11} b_{12} + a_{12} b_{22} + \\dots + a_{1k}b_{k2}) &amp; \\dots &amp; (a_{11} b_{1m} + a_{12} b_{2m} + \\dots + a_{1k}b_{km}) \\\\ (a_{21} b_{11} + a_{22} b_{21} + \\dots + a_{2k}b_{k1}) &amp; (a_{21} b_{12} + a_{22} b_{22} + \\dots + a_{2k}b_{k2}) &amp; \\dots &amp; (a_{21} b_{1m} + a_{22} b_{2m} + \\dots + a_{2k}b_{km}) \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ (a_{n1} b_{11} + a_{n2} b_{21} + \\dots + a_{nk}b_{k1}) &amp; (a_{n1} b_{12} + a_{n2} b_{22} + \\dots + a_{nk}b_{k2}) &amp; \\dots &amp; (a_{n1} b_{1m} + a_{n2} b_{2m} + \\dots + a_{nk}b_{km}) \\end{pmatrix} = \\\\ = \\begin{pmatrix} c_{11} &amp; c_{12} &amp; \\dots &amp; c_{1m} \\\\ c_{21} &amp; c_{22} &amp; \\dots &amp; c_{2m} \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ c_{n1} &amp; c_{n2} &amp; \\dots &amp; c_{nm} \\end{pmatrix} = \\boldsymbol{C} \\] \\[ c_{ij} = \\sum_{t=1}^k a_{it} b_{tj} \\] Вот так вот. Cвойства произведения матриц: \\(\\boldsymbol{A}(\\boldsymbol{B}\\boldsymbol{C}) = (\\boldsymbol{A}\\boldsymbol{B}) \\boldsymbol{C}\\) (ассоциативность) \\(\\lambda (\\boldsymbol{A}\\boldsymbol{B}) = (\\lambda \\boldsymbol{A}) \\boldsymbol{B}= (\\lambda \\boldsymbol{B}) \\boldsymbol{A}\\) (ассоциативность) \\(\\boldsymbol{A}(\\boldsymbol{B}+ \\boldsymbol{C}) = \\boldsymbol{A}\\boldsymbol{B}+ \\boldsymbol{A}\\boldsymbol{C}\\) (дистрибутивность) \\((\\boldsymbol{A}+ \\boldsymbol{B}) \\boldsymbol{C}= \\boldsymbol{A}\\boldsymbol{C}+ \\boldsymbol{B}\\boldsymbol{C}\\) (дистрибутивность) \\(\\boldsymbol{A}\\boldsymbol{B}\\neq \\boldsymbol{B}\\boldsymbol{A}\\) (отсутствие коммутативности) \\(\\boldsymbol{E}\\boldsymbol{A}= \\boldsymbol{A}; \\, \\boldsymbol{A}\\boldsymbol{E}= \\boldsymbol{A}\\) (умножение на единичный элемент) \\(\\boldsymbol{O}\\boldsymbol{A}= \\boldsymbol{O}; \\, \\boldsymbol{A}\\boldsymbol{O}= \\boldsymbol{O}\\) (умножение на нулевой элемент) \\(\\boldsymbol{A}\\boldsymbol{A}^{-1} = \\boldsymbol{A}^{-1} \\boldsymbol{A}= \\boldsymbol{E}\\) (умножение на обратную матрицу — только для некоторых квадратных матриц) Матричное умножение определено для векторов-столбцов (матриц-столбцов) и векторов-строк (матриц-строк) и выполняется по тем же правилам. 9.4.7 Транспонирование матрицы В матрице строки и столбцы можно поменять местами — получится транспонированная матрица. \\[ \\boldsymbol{A}= \\begin{pmatrix} \\boldsymbol{a}_1 \\\\ \\boldsymbol{a}_2 \\\\ \\vdots \\\\ \\boldsymbol{a}_n \\end{pmatrix} = \\begin{pmatrix} a_{11} &amp; a_{12} &amp; \\dots &amp; a_{1k} \\\\ a_{21} &amp; a_{22} &amp; \\dots &amp; a_{2k} \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ a_{n1} &amp; a_{n2} &amp; \\dots &amp; a_{nk} \\end{pmatrix} \\] \\[ \\boldsymbol{A}^\\mathrm{T}= \\begin{pmatrix} \\boldsymbol{a}_1 &amp; \\boldsymbol{a}_2 &amp; \\dots &amp; \\boldsymbol{a}_n \\end{pmatrix} = \\begin{pmatrix} a_{11} &amp; a_{21} &amp; \\dots &amp; a_{n1} \\\\ a_{12} &amp; a_{22} &amp; \\dots &amp; a_{n2} \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ a_{1k} &amp; a_{2k} &amp; \\dots &amp; a_{nk} \\end{pmatrix} \\] Транспонированная матрица будет иметь размер \\(k × n\\). 9.4.8 Детерминант и обратная матрица Детерминант (определитель) \\(\\det \\boldsymbol{A}, \\; |\\boldsymbol{A}|, \\Delta \\boldsymbol{A}\\) — величина, которая может быть вычислена и поставлена в однозначное соответствие квадратной матрице. Он «определяет» свойства матрицы, в том числе, её обратимость. Детерминан матрицы из одного элемента равен этому элементу: \\[ \\det \\begin{pmatrix} a_{11} \\end{pmatrix} = a_{11} \\] Детерминант матрицы \\(2×2\\) вычисляется следующим образом — это разность произведений элементов главной3 и побочной4 диагоналей: \\[ \\det \\begin{pmatrix} a_{11} &amp; a_{12} \\\\ a_{21} &amp; a_{22} \\end{pmatrix} = a_{11} a_{22} - a_{12} a_{21} \\] Вычисление дереминанта матрицы произвольного размера \\(n × n\\) требует введения ещё пары определений. Дополнительный минор \\(M_{ij}\\) матрицы \\(\\boldsymbol{A}\\) — это дереминант матрицы, полученной из матрицы \\(\\boldsymbol{A}\\) путём вычеркивания \\(i\\)-ой строки и \\(j\\)-го столбца. Алгебраическое дополнение элемента \\(a_{ij}\\) матрицы \\(\\boldsymbol{A}\\) — число, которое получается при умножении минора \\(M_{ij}\\) на \\((-1)^{i+j}\\): \\[ A_{ij} = (-1)^{i+j} M_{ij} \\] Детерминант матрицы произвольного размера \\(n×n\\) вычисляется так5: \\[ \\det \\boldsymbol{A}_{n×n} = \\sum_{j=1}^n (-1)^{1 + j} a_{1j} M_{1j} = \\sum_{j=1}^n a_{1j}A_{1j}, \\] где \\(M_{1j}\\) — дополнительный минор к элементу \\(a_{1j}\\). Но жизнь упрощается, когда есть R: A &lt;- matrix(sample(20:30, 9), nrow = 3) det(A) # так вычисляется детерминант матрицы ## [1] 1048 9.4.9 След матрицы След матрицы — сумма элементов (квадратной) матрицы, стоящих на главной6 диагонали. \\[ \\mathrm{tr}(\\boldsymbol{A}) = \\sum_i a_{ii} \\] О нём мы чуть-чуть вспомним, когда будем обсуждать ковариационные матрицы. В R нет специальной функции, которая вычисляет след матрицы. Давайте её напишем! Функция должна принимать на вход матрицу, проверять, является ли матрица квадратной, и, если да, то возвращать значение следа матрицы, если нет, то печатать в консоль «матрица не является квадратной». Подсказка: ?diag B &lt;- matrix(sample(1:100, 25), nrow = 5) C &lt;- matrix(sample(1:100, 12), nrow = 4) tr(B) ## [1] 120 tr(C) ## [1] &quot;матрица не является квадратной&quot; Дано: \\[ \\boldsymbol{A}= \\begin{pmatrix} 1 &amp; 3 \\\\ 2 &amp; 4 \\end{pmatrix} ; \\quad \\boldsymbol{B}= \\begin{pmatrix} 5 &amp; 6 &amp; 7 \\\\ 8 &amp; 9 &amp; 0 \\end{pmatrix} ; \\\\ \\boldsymbol{a}= \\begin{pmatrix} 11 &amp; 22 &amp; 33 \\end{pmatrix}; \\quad \\boldsymbol{b}= \\begin{pmatrix} 101 \\\\ 102 \\\\ 103 \\end{pmatrix}; \\] Вычислить: \\(\\boldsymbol{A}\\times \\boldsymbol{B}\\); \\(\\boldsymbol{B}\\times \\boldsymbol{A}\\); \\(\\boldsymbol{a}\\times \\boldsymbol{b}\\); \\(\\boldsymbol{b}\\times \\boldsymbol{a}\\); \\(\\boldsymbol{a}\\times \\boldsymbol{a}^\\mathrm{T}\\) Чтобы проверить ответ, введите в соответствующее поле значения элементов матрицы построчно. Элементы одной строки разделяйте пробелами, строки разделяйте [только] запятыми. Обсуждение критериев объективности мы оставим за рамками этого курса и постулируем, что мы их как-то хотя бы интуитивно пониманием. Для некоторой концептуальной рамки обозначим следующее: мы говорим об объективной связи между предметами, если (1) определённым предметам (или индивидам) присущи определённые признаки и если (2) определённым признакам свойственны определённые признаки.↩︎ Есть в другие подходы к определению истинности высказываний — таковый различные виды многозначной логики. Но они не-необходимы нам для целей курса, поэтому оставим их за бортом.↩︎ Та, которая идёт слева сверху вправо вниз.↩︎ Та, которая идёт справа сверху влево вниз.↩︎ Эта формула называется разложением по строке. Есть и другие↩︎ Та, которая идёт слева сверху вправо вниз.↩︎ "]]
