[["cfa.html", "28 Конфирматорный факторный анализ 28.1 Экспресс-введение в структурное моделирование 28.2 Модель конфирматорного факторного анализа 28.3 CFA в R", " 28 Конфирматорный факторный анализ 28.1 Экспресс-введение в структурное моделирование Вспомним, кто мы… Мы же с вами исследователи из области социальных и/или гуманитарных наук. А чем мы богаты? Теоретическими моделями, на которых мы основываем наши исследования! А какая теоретическая модель хороша? Та, которая получила эмпирическое подтверждение!1 А как это?… В предыдущей главе мы научились искать, факторы, скрытые за наблюдаемыми переменными — это уже большой шаг. Однако недостаточный. И главное ограничение PCA и EFA — это то, что мы ищем независимые факторы/главные компоненты, в то время как структура взаимосвязей между латентными переменными может быть гораздо сложнее. Кроме того, эти скрытые переменные могут предсказывать другие наблюдаемые переменные: например, уровень вовлеченности сотрудников [возможно] будет предсказывать выполнение KPI, что в свою очередь предсказывает заработную плату. То есть в данным случае мы движемся не от наблюдаемых переменных к латентным, а в обратном направлении. А ведь влияние одних латентных конструктов могут быть опосредованы другими… И в итоге получается что-то такое: Короче, модель может быть сколь угодно сложна — и надо её каким-то образом эмпирически проверять. Это позволяют делать методы структурного моделирования (structural equation modelling, SEM). Что это за методы? Это группа методов, которые проверять модели (гипотезы), описывающие наши данные. Проверка состоит из двух больших шагов: задание теоретической модели генерации данных; проверка того, насколько предложенная модель хорошо подходит под наши данные. Но, если вдуматься, то так работают все статистические методы — даже в линейной регрессии мы сначала задаём линейную модель, а потом проверяем, насколько хорошо она описывает взаимосвязи, представленные в данных. В чем же особенность SEM? Во-первых, в модель включаются латентные переменные — мы получаем возможность их моделировать и использовать для предсказаний. Этого не может делать, например, хорошо знакомая нам линейная регрессия, так как она работает только с наблюдаемыми переменными. Во-вторых, в модель могут быть включены косвенные связи — связи между латентными переменными. То есть мы можем моделировать связи между переменными, которые мы даже не можем измерить! Ну, круто же! Кроме того, модели удобно визуализируются с помощью диаграмм, аналогично рисунку выше. 28.1.1 Сколько нужно данных? Есть мнение, что «структурное моделирование требует большого количества данных». Не очень понятно, что считать большим количеством, однако эвристика следующая: на один оцениваемый параметр нужно не менее 10 наблюдений. Выглядит как что-то приемлемое. 28.2 Модель конфирматорного факторного анализа Окей, мы брифли взглянули на то, что такое структурное моделирование. Если мы возьмем от него только часть, то получим конфирматорный факторый анализ (confirmatory factor analysis). Осталось понять, какую часть надо взять. Наша задача — проверить факторный структуру данных, которую мы взяли из теории или нашли с помощью эксплораторного факторного анализа. То есть, в общем виде что-то такое: Выглядит уже не так страшно и запустанно. Как это всё работает внутри? Сложно. Но, на самом деле, за всем стоит привычная нам множественная линейная регрессия и уже знакомый нам метод максимального правдоподобия, ведь мы всё ещё в рамках линейных моделей. Чуть выше мы обсуждали, сколько нужно данных, и сказали, что «10 наблюдений на один параметр». Однако тактично умолчали, что есть такое параметр. Так вот параметры — это, проще говоря, стрелочки на схеме выше. Это либо факторный нагрузки, так же как и в EFA, или коэффициенты косвенных связей между латентными переменными. Конфирматорный факторный анализ в некотором смысле дополняет эксплораторный. Так, он позволяет уточнить и дополнить результаты последнего, а именно ответить на вопросы: пересекаются ли факторы? — действительно ли каждый переменная обусловлена влиянием одного фактора? достоверны ли статистически факторные нагрузки? как коррелируют сами факторы и как это влияет на факторные нагрузки? отличается ли дисперсия фактора от нуля? — ведь если нет, тогда этот фактор не информативен, то есть не дифференцирует респондентов Итак, модель конфирматорного факторного анализа мы осознали. Пора писать код! 28.3 CFA в R 28.3.1 Данные Продолжаем работать с данными про пиццу. Загрузим их, а также подключим необходимые библиотеки: library(tidyverse) # наш любимый ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ── ## ✓ ggplot2 3.3.2 ✓ purrr 0.3.4 ## ✓ tibble 3.0.4 ✓ dplyr 1.0.2 ## ✓ tidyr 1.1.2 ✓ stringr 1.4.0 ## ✓ readr 1.4.0 ✓ forcats 0.5.0 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() library(lavaan) # для структурного моделирования ## This is lavaan 0.6-8 ## lavaan is FREE software! Please report any bugs. library(semPlot) # для визуализаций pizza &lt;- read_csv(&#39;https://raw.githubusercontent.com/angelgardt/hseuxlab-andan/master/Pizza.csv&#39;) ## ## ── Column specification ──────────────────────────────────────────────────────── ## cols( ## brand = col_character(), ## id = col_double(), ## mois = col_double(), ## prot = col_double(), ## fat = col_double(), ## ash = col_double(), ## sodium = col_double(), ## carb = col_double(), ## cal = col_double() ## ) По результатам конфирматорного факторного анализа у нас получилась следующая модель: Её и будем проверять. 28.3.2 Синтаксис пакета lavaan Однако первоначально нам надо освоиться с пакетом lavaan (laten varible analysis). Это самый популярный пакет для структурного моделирования, однако у него несколько специфический синтаксис. В теоретической модели могут присутствовать различные типы связей: измерения — связи от наблюдаемых переменных к латентным (наблюдаемые → латентные) регрессии — связи от латентных переменны к наблюдаемым (латентные → наблюдаемые) и корреляции — связи между наблюдаемыми и латентными переменными (наблюдаемые → наблюдаемые, латентные → латентные) Для того, чтобы записать такую структуру модели был придуман специальный «язык», а вернее, обозначения: Измерения Регрессии Корреляции =~ ~ ~~ Для CFA нам необходимы только измерения, так как мы хотим проверить структуру измеритеьной факторной модели. Модель в lavaan — это одна строка, которая передается в функцию. Далее функции сами парсят строку так, как им надо. Наша модель будет записываться так: mdl1 &lt;- &quot;F1 =~ prot + fat + sodium + ash + carb F2 =~ mois + cal&quot; Но это может быть не очень удобно, если модель сложная, поэтому есть вариант записать модель в файл, и считать её прямо из файла: mdl1 &lt;- readLines(&quot;/Users/antonangelgardt/hseuxlab-wlm2021/book/wlm2021-book/data/mdl1.txt&quot;) ## Warning in readLines(&quot;/Users/antonangelgardt/hseuxlab-wlm2021/book/wlm2021- ## book/data/mdl1.txt&quot;): incomplete final line found on &#39;/Users/antonangelgardt/ ## hseuxlab-wlm2021/book/wlm2021-book/data/mdl1.txt&#39; Теперь можно перейти к подбору модели. 28.3.3 Подбор модели Для конфирматорного факторного анализа в пакета lavaan предусмотрена функция cfa(), которая хочет на вход модель и данные. Попробуем: model1 &lt;- cfa(mdl1, data = pizza) ## Warning in lav_data_full(data = data, group = group, cluster = cluster, : lavaan ## WARNING: some observed variances are (at least) a factor 1000 times larger than ## others; use varTable(fit) to investigate ## Warning in lavaan::lavaan(model = mdl1, data = pizza, model.type = &quot;cfa&quot;, : lavaan WARNING: ## the optimizer warns that a solution has NOT been found! summary(model1) ## lavaan 0.6-8 did NOT end normally after 1023 iterations ## ** WARNING ** Estimates below are most likely unreliable ## ## Estimator ML ## Optimization method NLMINB ## Number of model parameters 15 ## ## Number of observations 300 ## ## Model Test User Model: ## ## Test statistic NA ## Degrees of freedom NA ## ## Parameter Estimates: ## ## Standard errors Standard ## Information Expected ## Information saturated (h1) model Structured ## ## Latent Variables: ## Estimate Std.Err z-value P(&gt;|z|) ## F1 =~ ## prot 1.000 ## fat 1.439 NA ## sodium 0.059 NA ## ash 0.239 NA ## carb -3.278 NA ## F2 =~ ## mois 1.000 ## cal -0.000 NA ## ## Covariances: ## Estimate Std.Err z-value P(&gt;|z|) ## F1 ~~ ## F2 30.438 NA ## ## Variances: ## Estimate Std.Err z-value P(&gt;|z|) ## .prot 15.208 NA ## .fat 26.310 NA ## .sodium 0.047 NA ## .ash 0.116 NA ## .carb 44.092 NA ## .mois -118584.953 NA ## .cal 0.383 NA ## F1 26.056 NA ## F2 118710.492 NA 28.3.4 Оценка качества модели 28.3.5 Визуализация результатов Это, конечно, не единственный критерий, но сейчас для нас — аналитиков — самый важный.↩︎ "]]
